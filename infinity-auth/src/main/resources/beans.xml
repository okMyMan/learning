<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task-3.2.xsd">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <!--<value>file:/var/server-config/auth/data-access.properties</value>-->
                <value>classpath:data-access.properties</value>
                <value>classpath:resource-config.properties</value>
            </list>
        </property>
        <property name="fileEncoding">
            <value>UTF-8</value>
        </property>
    </bean>

    <!-- 扫描非mvc注解 -->
    <context:component-scan base-package="com.infinity">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>


    <context:annotation-config/>

    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <task:annotation-driven scheduler="scheduler"/>
    <task:scheduler id="scheduler" pool-size="1"/>

    <!-- 注解驱动事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>


    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 配置数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxIdle" value="100"/>
        <property name="maxTotal" value="300"/>
        <property name="validationQuery" value="select 1"></property>
        <property name="testWhileIdle" value="true"></property>
        <property name="testOnBorrow" value="true"></property>
        <property name="timeBetweenEvictionRunsMillis" value="3600000"></property>
        <property name="numTestsPerEvictionRun" value="50"></property>
        <property name="minEvictableIdleTimeMillis" value="120000"></property>
    </bean>
    <!-- 配置myBatis -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="mapperLocations">
            <list>
                <value>classpath*:com/infinity/**/mapper/*Mapper.xml</value>
            </list>
        </property>
    </bean>
    <!-- 配置SqlSession -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

    <!-- redis start -->
    <!--<bean class="com.infinity.redis.RedisUtil">
        <constructor-arg name="hosts" value="${redis.nodes}" />
        <constructor-arg name="timeout" value="10000" />
        <constructor-arg name="maxRedirection" value="6" />
    </bean>-->
    <!--<bean class="com.infinity.redis.RedisUtil">
        <constructor-arg name="hosts" value="${redis.nodes}" />
        <constructor-arg name="timeout" value="10000" />
        <constructor-arg name="maxRedirection" value="6" />
        <constructor-arg name="password" value="${redis.password}"/>
    </bean>-->
    <!-- redis end -->

    <bean class="com.infinity.redis.RedisUtil">
    </bean>

    <bean class="com.cassandra.bean.ClusterCenter" id="cluster1">
        <constructor-arg name="ips" value="${cassandra.ips}" />
        <constructor-arg name="port" value="${cassandra.port}" />
    </bean>

    <bean class="com.cassandra.keyspace.SimpleSpace">
        <constructor-arg name="cluster" ref="cluster1"/>
        <constructor-arg name="strategy" value="${cassandra.strategy}" />
        <constructor-arg name="replication_factor" value="${cassandra.replication_factor}"/>
    </bean>

    <!--&lt;!&ndash; 消费者配置 &ndash;&gt;
    <bean class="com.utils.mq.bean.MessageServiceConfig" id="ticketConfig">
        <property name="mqUrl" value="${MQ_URL}" />
        <property name="serviceType" value="OOTECO_MQ_TEST" />&lt;!&ndash;  &ndash;&gt;
        <property name="serviceName" value="${NODE_NAME}" />
        <property name="broadcastFlag" value="false" />&lt;!&ndash; 是否广播 &ndash;&gt;
        <property name="responseFlag" value="true" /> &lt;!&ndash;  是否同步异步 true是同步 &ndash;&gt;
    </bean>

    &lt;!&ndash; 消费者&ndash;&gt;
    <bean id="autoTicketService" class="com.utils.mq.impl.active.ActiveMQServerHandler">
        <constructor-arg index="0" ref="ticketConfig" />
        <constructor-arg index="1" ref="mqHandler" />
    </bean>

    &lt;!&ndash; 消费者者处理方法&ndash;&gt;
    <bean id="mqHandler" class="com.infinity.mq.MQhandler">
    </bean>-->

</beans>
